
@import "variables";

//animation for whole screen sliding in
.slideup{
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;

  //flexbox container
  display: flex;
  flex-flow: column;

  -webkit-transition:all 1s ease;
  -moz-transition:all 1s ease;
  -o-transition:all 1s ease;
  transition:all 1s ease;
  &.ng-enter{
    top: 100%;
  }
  &.ng-enter-active{
    top: 0;
  }
  &.ng-leave{
    top: 0;
  }
  &.ng-leave-active{
    top: -100%;
  }
}

//animations for player slips on the welcome screen
.sliderTimers{
  -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) .75s;
  -moz-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) .75s;
  -o-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) .75s;
  transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) .75s;
}
.joined{
  @extend .sliderTimers;
  &.ng-enter{
    opacity: 0;
    bottom: -500px;
  }
  &.ng-enter-active{
    opacity: 1;
    bottom: 0;
  }
  &.ng-leave{
    opacity: 1;
    right: 0;
  }
  &.ng-leave-active{
    opacity: 0;
    right: -800px;
  }
}
.readied{
  @extend .sliderTimers;
  &.ng-enter{
    opacity: 0;
    left: -800px;
  }
  &.ng-enter-active{
    opacity: 1;
    left: 0;
  }
  &.ng-leave{
    opacity: 1;
    bottom: 0;
  }
  &.ng-leave-active{
    opacity: 0;
    bottom: -500px;
  }
}
.playingCard{
  @extend .sliderTimers;
  &.ng-enter, &.ng-leave-active{
    opacity: 0;
    bottom: -500px;
  }
  &.ng-enter-active, &.ng-leave{
    opacity: 1;
    bottom: 0;
  }
}


.cardFlip{
  left: 0;
  -webkit-backface-visibility: hidden;
  -webkit-transition: all 0.5s;
}

//gameMessage flip card
.gameMessageContainer{
  @extend .layout-fill;
  flex: 1 1 auto;
  position: relative;
  padding-top: 1em;
  padding-left: 1em;
  padding-bottom: 1em;
  margin-left: 2em;
  z-index: 3;
  & .messageSide{
    @extend .cardFlip;
    @extend .slightlyRounded;
    @extend .md-whiteframe-2dp;
    background-color: $messageColor;
    position: absolute;
    // height: 6em;
    width: 80%;
    // top: 25%;
    display: flex;
    font-size: $headline-font-size-base*2/3;
    text-align: center;
    align-items: center;
    justify-content: center;
    padding-left: 1em;
    padding-right: 1em;
  }
}
.messageFront{
  @extend .messageSide;
  z-index: 2;
  .gameMessageContainer.flipped &{
    -webkit-transform: rotateX(-180deg);
  }
}
.messageBack{
  @extend .messageSide;
  -webkit-transform: rotateX(-180deg);
  .gameMessageContainer.flipped &{
    -webkit-transform: rotateX(0);
  }
}
.messageText{
  top: 25%;
}

//gameContent swapping
.gameContent{
  top: 50px;
  -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) .75s;
  -moz-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) .75s;
  -o-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) .75s;
  transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) .75s;
  &.ng-enter{
    top: 1000px;
  }
  &.ng-enter-active{
    top: 0;
  }
  &.ng-leave{
    top: 0;
  }
  &.ng-leave{
    top: -1000px;
  }
}

//used for returning cards to the standard hue
.fastReturn{
  -webkit-transition: all cubic-bezier(0.17, 0.67, 0.83, 0.67) 0.2s;
  -moz-transition: all cubic-bezier(0.17, 0.67, 0.83, 0.67) 0.2s;
  -o-transition: all cubic-bezier(0.17, 0.67, 0.83, 0.67) 0.2s;
  transition: all cubic-bezier(0.17, 0.67, 0.83, 0.67) 0.2s;
  -webkit-transition: all cubic-bezier(0.17, 0.67, 0.83, 0.67) 0.2s;
  -moz-transition: all cubic-bezier(0.17, 0.67, 0.83, 0.67) 0.2s;
  -o-transition: all cubic-bezier(0.17, 0.67, 0.83, 0.67) 0.2s;
  transition: all cubic-bezier(0.17, 0.67, 0.83, 0.67) 0.2s;
}

//guessPulses during resolution
.guessPulses{
  -webkit-transition: all cubic-bezier(0.17, 0.67, 0.83, 0.67) 0.5s;
  -moz-transition: all cubic-bezier(0.17, 0.67, 0.83, 0.67) 0.5s;
  -o-transition: all cubic-bezier(0.17, 0.67, 0.83, 0.67) 0.5s;
  transition: all cubic-bezier(0.17, 0.67, 0.83, 0.67) 0.5s;
}
.guessMid{
  @extend .guessPulses;
  background-color: $midGuessPulse;
  color: #FFFFFF;
}
.guessRight{
  @extend .guessPulses;
  background-color: $rightGuess;
  color: #FFFFFF;
}
.guessWrong{
  @extend .guessPulses;
  background-color: $wrongGuess;
  color: #FFFFFF;
}
.unguessed{
  @extend .guessPulses;
  background-color: $unguessed;
}
